name =          "spladev3_with_knn_mem_budget_2.0"
title =         "Seismic with knn on Spladev3 with memory budget 2.0 on MS MARCO"
description =   "Seismic with knn on Spladev3 with memory budget 2.0 on MS MARCO for the Table 1 (row 8) on CIKM 2024 paper"
dataset =       "Spladev3 on MS-MARCO"
# compile-command = "cargo build" # Compile in debug mode? default is release mode
# build-command = "./target/release/build_inverted_index"
# query-command = "./target/debug/perf_inverted_index"

[settings]
k =             10
n-runs =        1       # Number of runs. PLEASE think carefully how increasing 
                        #Â this may influence your query time
# NUMA =        ""      # "numactl --physcpubind='0-15' --localalloc"    # Is the machine NUMA and need to prepend "numactl --physcpubind='0-15' --localalloc" to query command? Otherwise comment this!
build =         true   # Need to build the index or the index is already built?
metric =        "RR@10"

[folder] 
data =          "~/sparse_datasets/msmarco_v1_passage/spladev3/data"
index =         "~/sparse_indexes/msmarco_v1_passage/spladev3/indexes"
qrels_path =    "~/sparse_datasets/msmarco_v1_passage/qrels.dev.small.tsv"
experiment =    "."     # stdout and stderr here of running the experiment is saved here. in a specific subfolder for the current execution

[filename]
dataset =       "documents.bin"
queries =       "queries.bin"
groundtruth =   "groundtruth.tsv"
doc_ids =       "doc_ids.npy"
query_ids =     "queries_ids.npy"
index =         "cikm_2024_spladev3_with_knn_mem_budget_2.0"
knn_path =      "knn_graph_cikm.npy"

[indexing_parameters]
n-postings =            4000
centroid-fraction =     0.1
summary-energy =        0.5
knn =                   30
clustering-algorithm =  "random-kmeans" # Possible options are "random-kmeans", "random-kmeans-inverted-index", "random-kmeans-inverted-index-approx"
kmeans-doc-cut =        15    # needed by "random-kmeans-inverted-index" and "random-kmeans-inverted-index-approx"
kmeans-pruning-factor = 0.005 # Only used by random-kmeans-inverted-index

[query]
    [query.recall_90]
    query-cut =         2
    heap-factor =       1.0
    knn =               30
    first-sorted =      true

    [query.recall_91]
    query-cut =         2
    heap-factor =       1.0
    knn =               30
    first-sorted =      true
    
    [query.recall_92]
    query-cut =         2
    heap-factor =       1.0
    knn =               30
    first-sorted =      true

    [query.recall_93]
    query-cut =         2
    heap-factor =       1.0
    knn =               30
    first-sorted =      true

    [query.recall_94]
    query-cut =         2
    heap-factor =       1.0
    knn =               30
    first-sorted =      true

    [query.recall_95]
    query-cut =         2
    heap-factor =       1.0
    knn =               30
    first-sorted =      true

    [query.recall_96]
    query-cut =         3
    heap-factor =       1.0
    knn =               30
    first-sorted =      true

    [query.recall_97]
    query-cut =         3
    heap-factor =       1.0
    knn =               30
    first-sorted =      true

    [query.recall_98]
    query-cut =         4
    heap-factor =       1.0
    knn =               30
    first-sorted =      true

    [query.recall_99]
    query-cut =         8
    heap-factor =       1.0
    knn =               30
    first-sorted =      true